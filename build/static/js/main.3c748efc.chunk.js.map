{"version":3,"sources":["actions.js","Components/Restaurants.js","Components/RestaurantDetailed.js","Components/RestaurantMeasurements.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["Action","Object","freeze","LoadChains","LoadRestaurants","LoadLocations","ShowProgress","HideProgress","SelectRestaurant","LoadLatitude","LoadLongitude","LoadMeasurements","AddMeasurement","fetchChains","dispatch","showProgress","fetch","then","response","json","data","chains","type","payload","hideProgress","postMeasurement","id","inTime","outTime","new_measurement","rest_id","meas_time_in","meas_time_out","meas_drive_through","options","method","headers","body","JSON","stringify","assertResponse","measurement","ok","catch","err","console","log","fetchLocations","chain_id","locations","fetchMeasurements","measurements","Restaurants","useSelector","state","chainLoaded","isProgressing","useDispatch","useEffect","className","results","map","chain","href","RestaurantDetailed","locationsLoaded","latitude","longitude","params","useParams","refine_interval","interval","cd","mask","decodeGeoHash","geohash","is_even","lat","lon","BITS","i","length","c","indexOf","j","calcCrow","lat1","lon1","lat2","lon2","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","toFixed","getAddress","result","currentLat","currentLon","document","getElementById","textContent","formatted_address","location","RestaurantMeasurements","useState","entrytime","setEntrytime","exittime","setExittime","measurementsLoaded","measurementTimes","calcDateDiff","d1","d2","date1","Date","msec","getTime","hh","floor","mm","date_of_month","getDate","day_of_week","getDay","month_of_year","getMonth","output","push","onSubmit","e","preventDefault","alert","for","onChange","target","value","name","App","getCoordinates","position","coords","navigator","geolocation","getCurrentPosition","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","action","selectedRestaurant","applyMiddleware","thunk","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3c748efc.chunk.js","sourcesContent":["import { assertResponse } from 'react-thunk';\r\n\r\nexport const Action = Object.freeze({\r\n    LoadChains: 'LoadChains',\r\n    LoadRestaurants: 'LoadRestaurants',\r\n    LoadLocations: 'LoadLocations',\r\n    ShowProgress: 'ShowProgress',\r\n    HideProgress: 'HideProgress',\r\n    SelectRestaurant: 'SelectRestaurant',\r\n    LoadLatitude: 'LoadLatitude',\r\n    LoadLongitude: 'LoadLongitude',\r\n    LoadMeasurements: 'LoadMeasurements',\r\n    AddMeasurement: 'AddMeasurement',\r\n});\r\n\r\nexport function fetchChains() {\r\n    return dispatch => {\r\n        dispatch(showProgress());\r\n        fetch(\"https://project2.schafftsp.me:8443/chains\").then(response => response.json()).then(data => {\r\n            dispatch(loadChains(data));\r\n            dispatch(hideProgress());\r\n        });\r\n    }\r\n}\r\n\r\nexport function postMeasurement(id, inTime, outTime) {\r\n    const new_measurement = {\r\n        rest_id: id,\r\n        meas_time_in: inTime,\r\n        meas_time_out: outTime,\r\n        meas_drive_through: 1,\r\n    };\r\n\r\n    return dispatch => {\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(new_measurement),\r\n          };\r\n          fetch(`https://project2.schafftsp.me:8443/measurement/`, options)\r\n          .then(assertResponse)\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            if (data.ok) {\r\n              dispatch(addMeasurement({\r\n                ...new_measurement\r\n              }));\r\n            }\r\n          })\r\n          .catch(err => {\r\n            console.log(\"error:\", err);\r\n          });\r\n      };\r\n}\r\n\r\nexport function fetchLocations(chain_id) {\r\n    return dispatch => {\r\n        dispatch(showProgress());\r\n        fetch(\"https://project2.schafftsp.me:8443/restaurants/\" + chain_id).then(response => response.json()).then(data => {\r\n            dispatch(loadLocations(data));\r\n            dispatch(hideProgress());\r\n        });\r\n    }\r\n}\r\n\r\nexport function fetchMeasurements(rest_id) {\r\n    return dispatch => {\r\n        dispatch(showProgress());\r\n        fetch(\"https://project2.schafftsp.me:8443/measurement/\" + rest_id).then(response => response.json()).then(data => {\r\n            dispatch(loadMeasurements(data));\r\n            dispatch(hideProgress());\r\n        });\r\n    }\r\n}\r\n\r\nexport function addMeasurement(measurement) {\r\n    return {type: Action.AddMeasurement, payload: measurement};\r\n  }\r\n\r\nexport function loadChains(chains) {\r\n    return { type: Action.LoadChains, payload: chains }\r\n}\r\n\r\nexport function loadMeasurements(measurements) {\r\n    return { type: Action.LoadMeasurements, payload: measurements }\r\n}\r\n\r\nexport function loadLocations(locations) {\r\n    return { type: Action.LoadLocations, payload: locations }\r\n}\r\n\r\nexport function loadLatitude(latitude) {\r\n    return { type: Action.LoadLatitude, payload: latitude }\r\n}\r\n\r\nexport function loadLongitude(longitude) {\r\n    return { type: Action.LoadLongitude, payload: longitude }\r\n}\r\n\r\nexport function showProgress() {\r\n    return { type: Action.ShowProgress, payload: true };\r\n}\r\n\r\nexport function hideProgress() {\r\n    return { type: Action.HideProgress, payload: false };\r\n}\r\n\r\nexport function selectRestaurant(restaurant_id) {\r\n    return { type: Action.SelectRestaurant, payload: restaurant_id };\r\n}","import React from 'react'\r\nimport { useEffect } from \"react\";\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { fetchChains } from '../actions';\r\nimport '../CSS/Restaurants.css';\r\nimport '../CSS/spinner.css';\r\n\r\nconst Restaurants = () => {\r\n    const chains = useSelector(state => state.chains);  \r\n    const chainLoaded = useSelector(state => state.chainLoaded);\r\n    const isProgressing = useSelector(state => state.isProgressing);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchChains());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            {isProgressing && <div className=\"spinner\" />}\r\n            {chainLoaded && chains.results.map(chain => \r\n                    <a href={`/${chain[0]}`} className=\"Restaurant-Component\">\r\n                        <h2>{chain[1]} &gt; <span className=\"Restaurant-Phone\">{chain[2]}</span> </h2>\r\n                        <h3>View locations</h3>\r\n                    </a>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Restaurants\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { fetchLocations } from '../actions';\r\nimport { useEffect } from \"react\";\r\nimport '../CSS/spinner.css';\r\n\r\n\r\nconst RestaurantDetailed = () => {\r\n    const locations = useSelector(state => state.locations);\r\n    const isProgressing = useSelector(state => state.isProgressing);\r\n    const locationsLoaded = useSelector(state => state.locationsLoaded);\r\n\r\n    const latitude = useSelector(state => state.latitude);\r\n    const longitude = useSelector(state => state.longitude);\r\n\r\n    const params = useParams();\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchLocations(params.chain_id));\r\n    }, [dispatch]);\r\n\r\n    function refine_interval(interval, cd, mask) {\r\n        if (cd&mask)\r\n            interval[0] = (interval[0] + interval[1])/2;\r\n      else\r\n            interval[1] = (interval[0] + interval[1])/2;\r\n    }\r\n\r\n    function decodeGeoHash(geohash) {\r\n        var is_even = 1;\r\n        var lat = []; var lon = [];\r\n        lat[0] = -90.0;  lat[1] = 90.0;\r\n        lon[0] = -180.0; lon[1] = 180.0;\r\n        var lat_err = 90.0;  var lon_err = 180.0;\r\n        const BASE32 = \"0123456789bcdefghjkmnpqrstuvwxyz\";\r\n        const BITS = [16, 8, 4, 2, 1];\r\n        \r\n        for (var i=0; i<geohash.length; i++) {\r\n            var c = geohash[i];\r\n            var cd = BASE32.indexOf(c);\r\n            for (var j=0; j<5; j++) {\r\n                var mask = BITS[j];\r\n                if (is_even) {\r\n                    lon_err /= 2;\r\n                    refine_interval(lon, cd, mask);\r\n                } else {\r\n                    lat_err /= 2;\r\n                    refine_interval(lat, cd, mask);\r\n                }\r\n                is_even = !is_even;\r\n            }\r\n        }\r\n        lat[2] = (lat[0] + lat[1])/2;\r\n        lon[2] = (lon[0] + lon[1])/2;\r\n    \r\n        return { latitude: lat, longitude: lon};\r\n    }\r\n\r\n    function calcCrow(lat1, lon1, lat2, lon2) \r\n    {\r\n        lat1 = lat1[0];\r\n        lon1 = lon1[0];\r\n        if ((lat1 == lat2) && (lon1 == lon2)) {\r\n            return 0;\r\n        }\r\n        else {\r\n            var radlat1 = Math.PI * lat1/180;\r\n            var radlat2 = Math.PI * lat2/180;\r\n            var theta = lon1-lon2;\r\n            var radtheta = Math.PI * theta/180;\r\n            var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\r\n            if (dist > 1) {\r\n                dist = 1;\r\n            }\r\n            dist = Math.acos(dist);\r\n            dist = dist * 180/Math.PI;\r\n            dist = dist * 60 * 1.1515;\r\n            return dist.toFixed(1);\r\n        }\r\n    }\r\n\r\n    function getAddress(geohash) {\r\n        const result = decodeGeoHash(geohash);\r\n        var currentLat = (result.latitude[0]).toFixed(2);\r\n        var currentLon = (result.longitude[0]).toFixed(2);\r\n        fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${currentLat},${currentLon}&key=AIzaSyC-GnsYOSBo7-JcT7e83IQl9QKFuwVokD0`)\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            document.getElementById(geohash).textContent=data.results[0].formatted_address;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {isProgressing && <div className=\"spinner\" />}\r\n            {locationsLoaded && locations.results.map(location => \r\n                    <a href={`${params.chain_id}/${location[0]}`} className=\"Restaurant-Component\">\r\n                        <h2>{calcCrow(decodeGeoHash(location[1]).latitude, decodeGeoHash(location[1]).longitude, latitude, longitude)} mi --&gt; <span id={location[1]}>{getAddress(location[1])}</span></h2>\r\n                        <h3>View wait times</h3>\r\n                    </a>\r\n                )}\r\n            <a className=\"backButton\" href=\"/\">Back</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RestaurantDetailed\r\n","import React from 'react'\r\nimport { useParams } from \"react-router\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchMeasurements, postMeasurement } from '../actions';\r\nimport { useEffect, useState } from \"react\";\r\nimport '../CSS/RestaurantMeasurement.css';\r\n\r\nconst RestaurantMeasurements = () => {\r\n    const [entrytime, setEntrytime] = useState('');\r\n    const [exittime, setExittime] = useState('');\r\n\r\n    const measurements = useSelector(state => state.measurements);\r\n    const isProgressing = useSelector(state => state.isProgressing);\r\n    const measurementsLoaded = useSelector(state => state.measurementsLoaded);\r\n\r\n    const params = useParams();\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchMeasurements(params.rest_id));\r\n    }, [dispatch]);\r\n\r\n    var measurementTimes = [];\r\n\r\n    function calcDateDiff(d1, d2) {\r\n        var date1 = new Date(d1);\r\n        var date2 = new Date(d2);\r\n\r\n        var diff = date2.getTime() - date1.getTime();\r\n\r\n        var msec = diff;\r\n        var hh = Math.floor(msec / 1000 / 60 / 60);\r\n        msec -= hh * 1000 * 60 * 60;\r\n        var mm = Math.floor(msec / 1000 / 60);\r\n\r\n        var date_of_month = \"\" + date1.getDate();\r\n        var day_of_week = date1.getDay();\r\n        var month_of_year = date1.getMonth();\r\n\r\n        const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        const months = [\"January\", \"Febuary\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n        var output = \"\" + days[day_of_week] + \", \" + months[month_of_year] + \" \" + date_of_month + \": \";\r\n        output += hh == 0 ? \"\" : hh + \" hour(s), \";\r\n        output += mm + \" min(s)\"\r\n        measurementTimes.push((hh * 60) + mm);\r\n        return output;\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n    \r\n        e.preventDefault();\r\n        if (entrytime == \"\" || exittime == \"\") {\r\n            alert(\"Please complete the form before submitting.\");\r\n        }\r\n        dispatch(postMeasurement(params.rest_id, entrytime, exittime));\r\n        console.log(`Form submitted: ${entrytime}, ${exittime}`);    \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"box\">\r\n                <h3>Submit your own measurement:</h3>\r\n                <div className=\"innerbox\">\r\n                    <form onSubmit = {handleSubmit}>\r\n                        <label for=\"entrytime\">Time entered: </label>\r\n                        <input onChange = {(e) => setEntrytime(e.target.value)} value = {entrytime} type=\"datetime-local\" id=\"entrytime\" name=\"entrytime\"></input>\r\n                        <label for=\"exittime\">Time exited: </label>\r\n                        <input onChange = {(e) => setExittime(e.target.value)} value = {exittime} type=\"datetime-local\" id=\"exittime\" name=\"exittime\"></input>\r\n                        <button type = 'submit'>Submit</button>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"box bottom-box\">\r\n                {isProgressing && <div className=\"spinner\" />}\r\n                {measurementsLoaded && measurements.results.length == 0 && <h2>There are no avaliable measurements for this location.</h2>}\r\n                {measurementsLoaded && measurements.results.length > 0 && measurements.results.map(measurement => \r\n                    <h3>{calcDateDiff(measurement[2], measurement[3])}</h3>\r\n                    )}\r\n            </div>\r\n            \r\n            <a className=\"backButton\" href={`/${params.chain_id}`}>Back</a>\r\n            <a className=\"backButton\" href={`/`}>Home</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RestaurantMeasurements\r\n","import './App.css';\nimport Restaurants from './Components/Restaurants';\nimport RestaurantDetailed from './Components/RestaurantDetailed';\nimport RestaurantOptions from './Components/RestaurantMeasurements';\nimport { useDispatch } from 'react-redux';\nimport { Route, Routes } from 'react-router-dom';\nimport { loadLatitude, loadLongitude } from './actions.js'\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  function getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(getCoordinates);\n    } else {\n      alert(\"Geolocation is not supported by this browser.\");\n    }\n  } \n\n  function getCoordinates(position) {\n    dispatch(loadLatitude(position.coords.latitude));\n    dispatch(loadLongitude(position.coords.longitude));\n  }\n\n  getLocation();\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-Container\">\n        <h1>Drive Through App</h1>\n        <Routes>\n          <Route path=\"/\" element={<Restaurants />} />\n          <Route path=\"/:chain_id\" element={<RestaurantDetailed />} />\n          <Route path=\"/:chain_id/:rest_id\" element={<RestaurantOptions />} />\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { Action } from './actions';\r\n\r\nconst initialState = {\r\n    chains: [],\r\n    locations: [],\r\n    measurements: [],\r\n    selectedRestaurant: null,\r\n    isProgressing: false,\r\n    chainLoaded: false,\r\n    locationsLoaded: false,\r\n    measurementsLoaded: false,\r\n    latitude: null,\r\n    longitude: null,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case Action.LoadChains:\r\n            return {\r\n                ...state,\r\n                chains: action.payload,\r\n                chainLoaded: true,\r\n            };\r\n        case Action.LoadLocations:\r\n            return {\r\n                ...state,\r\n                locations: action.payload,\r\n                locationsLoaded: true,\r\n            };\r\n        case Action.LoadMeasurements:\r\n            return {\r\n                ...state,\r\n                measurements: action.payload,\r\n                measurementsLoaded: true,\r\n            }\r\n        case Action.LoadLatitude:\r\n            return {\r\n                ...state,\r\n                latitude: action.payload,\r\n            };\r\n        case Action.LoadLongitude:\r\n            return {\r\n                ...state,\r\n                longitude: action.payload,\r\n            };\r\n        case Action.ShowProgress:\r\n            return {\r\n                ...state,\r\n                isProgressing: true,\r\n            };\r\n        case Action.HideProgress:\r\n            return {\r\n                ...state,\r\n                isProgressing: false,\r\n            };\r\n        case Action.AddMeasurement:\r\n            return {\r\n              ...state,\r\n              measurements: [action.payload, ...state.measurements],  \r\n            };\r\n        case Action.SelectRestaurant:\r\n            return {\r\n                ...state,\r\n                selectedRestaurant: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const store = createStore(reducer, initialState, applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {store} from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}